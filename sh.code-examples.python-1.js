hs.highlight('import csv\n' +
    '\n' +
    '# write stocks data as comma-separated values\n' +
    'writer = csv.writer(open(\'stocks.csv\', \'wb\', buffering=0))\n' +
    'writer.writerows([\n' +
    '    (\'GOOG\', \'Google, Inc.\', 505.24, 0.47, 0.09),\n' +
    '    (\'YHOO\', \'Yahoo! Inc.\', 27.38, 0.33, 1.22),\n' +
    '    (\'CNET\', \'CNET Networks, Inc.\', 8.62, -0.13, -1.49)\n' +
    '])\n' +
    '\n' +
    '# read stocks data, print status messages\n' +
    'stocks = csv.reader(open(\'stocks.csv\', \'rb\'))\n' +
    'status_labels = {-1: \'down\', 0: \'unchanged\', 1: \'up\'}\n' +
    'for ticker, name, price, change, pct in stocks:\n' +
    '    status = status_labels[cmp(float(change), 0.0)]\n' +
    '    print \'%s is %s (%s%%)\' % (name, status, pct)\n' +
    '\n' +
    '#! /usr/bin/env python3 \' hi \'\n' +
    '\n' +
    '"""Keywords (from "graminit.c")\n' +
    '\n' +
    'This file is automatically generated; please don\'t muck it up!\n' +
    '\n' +
    'To update the symbols in this file, \'cd\' to the top directory of\n' +
    'the python source tree after building the interpreter and run:\n' +
    '\n' +
    '    python Lib/keyword.py\n' +
    '"""\n' +
    '\n' +
    '__all__ = ["iskeyword", "kwlist"]\n' +
    '\n' +
    'print \'%(langudge)s has %(#)03d \\x23 \\t  quote types.\' % \\\n' +
    '      {\'language\': "Python", "#": 2.0232}\n' +
    '\n' +
    'kwlist = [\n' +
    '#--start keywords--\n' +
    '        \'False\',\n' +
    '        \'None\',\n' +
    '        \'True\',\n' +
    '        \'and\',\n' +
    '        \'as\',\n' +
    '        \'assert\',\n' +
    '        \'break\',\n' +
    '        \'class\',\n' +
    '        \'continue\',\n' +
    '        \'def\',\n' +
    '        \'del\',\n' +
    '        \'elif\',\n' +
    '        \'else\',\n' +
    '        \'except\',\n' +
    '        \'finally\',\n' +
    '        \'for\',\n' +
    '        \'from\',\n' +
    '        \'global\',\n' +
    '        \'if\',\n' +
    '        \'import\',\n' +
    '        \'in\',\n' +
    '        \'is\',\n' +
    '        \'lambda\',\n' +
    '        \'nonlocal\',\n' +
    '        \'not\',\n' +
    '        \'or\',\n' +
    '        \'pass\',\n' +
    '        \'raise\',\n' +
    '        \'return\',\n' +
    '        \'try\',\n' +
    '        \'while\',\n' +
    '        \'with\',\n' +
    '        \'yield\',\n' +
    '#--end keywords--\n' +
    '        ]\n' +
    '\n' +
    'iskeyword = frozenset(kwlist).__contains__\n' +
    '\n' +
    'def main():\n' +
    '    import sys, re\n' +
    '\n' +
    '    args = sys.argv[1:]\n' +
    '    iptfile = args and args[0] or "Python/graminit.c"\n' +
    '    if len(args) > 1: optfile = args[1]\n' +
    '    else: optfile = "Lib/keyword.py"\n' +
    '\n' +
    '    # scan the source file for keywords\n' +
    '    with open(iptfile) as fp:\n' +
    '        strprog = re.compile(\'"([^"]+)"\')\n' +
    '        lines = []\n' +
    '        for line in fp:\n' +
    '            if \'{1, "\' in line:\n' +
    '                match = strprog.search(line)\n' +
    '                if match:\n' +
    '                    lines.append("        \'" + match.group(1) + "\',\\n")\n' +
    '    lines.sort()\n' +
    '\n' +
    '    # load the output skeleton from the target\n' +
    '    with open(optfile) as fp:\n' +
    '        format = fp.readlines()\n' +
    '\n' +
    '    # insert the lines of keywords\n' +
    '    try:\n' +
    '        start = format.index("#--start keywords--\\n") + 1\n' +
    '        end = format.index("#--end keywords--\\n")\n' +
    '        format[start:end] = lines\n' +
    '    except ValueError:\n' +
    '        sys.stderr.write("target does not contain format markers\\n")\n' +
    '        sys.exit(1)\n' +
    '\n' +
    '    # write the output file\n' +
    '    fp = open(optfile, \'w\')\n' +
    '    fp.write(\'\'.join(format))\n' +
    '    fp.close()\n' +
    '\n' +
    'if __name__ == "__main__":\n' +
    '    main()\n');